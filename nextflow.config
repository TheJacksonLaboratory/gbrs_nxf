#!/usr/bin/env nextflow
//====================  Nextflow/Container Config  ==========

manifest {
    name = "GBRS"
    description = 'Analyze RNAseq with GBRS'
    author = 'Mike Lloyd, Benjamin Leopold'
    mainScript = "main.nf"
    nextflowVersion = '!>=20.04.0'
    version = "0.4.11"
}

////// Included Default Config Settings \\\\\\
//NOTE: arg in `run`: '-params-file params.config' will override the default values
params.email = params.email ?: "DEBUG-DEFAULT-TBD@jax.org"
params.outputDir = params.outputDir ?: "${manifest.name}_results"

// Include JAX Universal Config Settings
univcfg = new File("$projectDir/universal.config")
if (univcfg.canRead()) { includeConfig univcfg }
else {
    profiles {
        standard { process.executor = "local" }
        sumner {
            process.executor = "slurm"
            process.module = "slurm"
            process.clusterOptions = "-q batch"
        }
    }
}

process {
    errorStrategy = { task.attempt <= 2 ? "retry" : "finish" } // retry<=2 : 3 tries

    time = { 6.hour * task.attempt }
    memory = { 15.GB * task.attempt }

    withLabel:high_mem{
        cpus = 8
        time= '12:00:00'
        memory = '250.GB'
        maxRetries = 2
    }
    withLabel:const_mem{
        cpus = 8
        time = '12:00:00'
        memory = '350.GB'
    }
    withLabel:single_cpu{
        cpus = 1
        time = '12:00:00'
        memory = '100.GB'
        clusterOptions = '-q batch'
        maxRetries = 3
    }

    simgPath  = "$projectDir/images"

    withLabel:   bowtie1  { container = 'library://rna-mapping-tools/bowtie1:v1.2.3'  } // from Asaf
    //withLabel: bowtie   { container = "file://${simgPath}/bowtie.sif"               } //v1.1.2

    withLabel:   gbrs     { container = 'library://kbchoi/gbrs:0.1.6'                 }
    //withLabel: gbrs     { container = "file://${simgPath}/gbrs.sif"                 } //v0.1.6

    //FIXME: get picard sif. from jaxreg?
    withLabel:   picard   { container = "file://${simgPath}/picard_latest.sif"        } //v2.20.3-2-g6acd421-SNAPSHOT

    withLabel:   star     { container = 'quay.io/biocontainers/star:2.6.0c--1'        } // from Asaf
    //withLabel: star     { container = "file://${simgPath}/star.sif"                 } //v2.5.3a

    withLabel:   utils    { container = "library://atac-seq/bash-utils-alpine:v3.11"  }

    withLabel:   samtools { container = 'library://rna-seq-do-gbrs/samtools:v0.1.18'  } // from Asaf
    //withLabel: samtools { container = "file://${simgPath}/samtools.sif"             } //v0.1.18

    withLabel:   export   { container = 'library://rna-seq-do-gbrs/export-genoprob:v0.1.6' } // from Asaf
    //withLabel: export_genoprobe { container  =    "file://${simgPath}/export-genoprob_v0.1.6.sif" } //v0.1.6

    //FIXME: get perl sif. from jaxreg?
    //withLabel: perl { container = "file://${simgPath}/perl.sif" }
}

//FIXME: determine which unix-based NXF features can be re-enabled (timeline/report/etc) w/o bash/ps/uname/etc
notification {
    enabled = false // true
    to = params.email
    from = "nxf-${manifest.name}"
}

singularity {
    enabled = true
    process.module = "singularity"
    cacheDir = "${process.simgPath}/cache"
    autoMounts = true
    runOptions = ''
    engineOptions = ''
}

env {
    NXF_ANSI_SUMMARY = true
    NXF_ANSI_LOG = true
    NXF_DEBUG = 2
    PYTHONNOUSERSITE = 1
}

timeline {
    enabled = false // true
    file = "${params.outputDir}/nxf_status/timeline.html"
}

report {
    enabled = false // true
    file = "${params.outputDir}/nxf_status/report.html"
}

weblog {
    enabled = false // true
}

trace {
    enabled = false // true
    file = "${params.outputDir}/nxf_status/trace.txt"
    fields = ""\
       + "task_id,"   \
       + "hash,"      \
       + "process,"   \
       + "tag,"       \
       + "status,"    \
       + "exit,"      \
       + "start,"     \
       + "container," \
       + "cpus,"      \
       + "time,"      \
       + "disk,"      \
       + "memory,"    \
       + "duration,"  \
       + "realtime,"  \
       + "queue,"     \
       + "%cpu,"      \
       + "%mem,"      \
       + "rss,"       \
       + "vmem,"      \
       + "rchar,"     \
       + "wchar"
    }


// vim: set ft=groovy.nextflow ts=4 sw=0 tw=100 et fdm=syntax:
